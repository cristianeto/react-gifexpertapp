{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"mMAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAiBzC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEFC,QAAQC,IAAI,aACRN,EAAWO,OAAOC,OAAS,IAC7BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAIhB,SACE,uBACES,KAAK,OACLC,YAAY,mBACZC,MAAOZ,EACPa,SApBoB,SAACV,GACzBF,EAAcE,EAAEW,OAAOF,OACvBP,QAAQC,IAAIH,EAAEW,OAAOF,a,+BCRZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEHI,MAAMF,GAFH,cAEfG,EAFe,gBAGEA,EAAIC,OAHN,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAYdM,GAZc,4CAAH,sDCuBLO,EApBM,SAACf,GAAc,IAAD,EACPjB,mBAAS,CACjCwB,KAAM,GACNS,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAiBjC,OAXAC,qBAAU,WACRpB,EAAQC,GACLoB,MAAK,SAAAC,GACJH,EAAS,CACPX,KAAMc,EACNL,SAAS,SAId,CAAChB,IAEGiB,GCTMK,EATK,SAAC,GAAuB,EAArBX,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OACE,sBAAKqB,UAAU,yCAAf,UACE,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCoBKc,EAtBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EACEe,EAAaf,GAAjCa,EADkB,EACxBN,KAAcS,EADU,EACVA,QAEtB,OACE,qCACE,oBAAIO,UAAU,oCAAd,SAAmDvB,IAClDgB,GAAW,mBAAGO,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEGV,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAEMA,GADCA,EAAIC,aCYNgB,EAvBM,WAAO,IAAD,EACW5C,mBAAS,CAAC,SADrB,mBAClB6C,EADkB,KACN9C,EADM,KAOzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG8C,EAAWnB,KAAI,SAACT,EAAU6B,GAAX,OACd,cAAE,EAAF,CAAyB7B,SAAUA,GAApBA,Y,MCZzB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f3a4e2e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n    console.log(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log('submiting');\n    if (inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats,]);\n      setInputValue('');\n    }\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Write a category\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  )\n}\n\nexport default AddCategory\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CTultUNDaOlOTkVSr2pou3ItXZVBWFxZ`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    }\n  })\n  return gifs;\n}","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nconst useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => { //Se ejecuta esto cuando el componente se renderiza por 1ra vez\n    getGifs(category)\n      .then(imgs => {\n        setState({\n          data: imgs,\n          loading: false,\n        });\n\n      });\n  }, [category]);\n\n  return state; //{data:[], loading: true}\n}\n\nexport default useFetchGifs\n","import React from 'react'\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n      <div className=\"card-grid\">\n\n        {images.map((img) => (\n          <GifGridItem\n            key={img.id}\n            {...img}\n          />\n        ))\n        }\n\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['goku']);\n\n  /*   const handleAdd = () => {\n      //setCategories(['HunterXHunter', ...categories]);\n      setCategories(cats => [...categories, 'HunterXHunter']);\n    }; */\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category, index) => (\n          < GifGrid key={category} category={category} />\n        )\n        )}\n      </ol>\n    </>\n  )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}